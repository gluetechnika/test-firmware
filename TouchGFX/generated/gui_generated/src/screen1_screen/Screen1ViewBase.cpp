/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase() :
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
{
    scalableImage1.setBitmap(Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_480X272PX_ID));
    scalableImage1.setPosition(0, 0, 1024, 600);
    scalableImage1.setScalingAlgorithm(ScalableImage::BILINEAR_INTERPOLATION);

    box1.setPosition(38, 52, 135, 160);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 0, 0));

    box1_2.setPosition(38, 212, 135, 160);
    box1_2.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 255));

    box1_1.setPosition(173, 52, 135, 160);
    box1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 255, 0));

    box1_3.setPosition(173, 212, 135, 160);
    box1_3.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    box1_4.setPosition(38, 369, 135, 160);
    box1_4.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));

    box1_5.setPosition(173, 369, 135, 160);
    box1_5.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 0));

    box1_5_1.setPosition(308, 52, 135, 160);
    box1_5_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 0, 255));

    slider1.setXY(314, 228);
    slider1.setBitmaps(Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_LARGE_SLIDER_ROUND_BACK_ID), Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_LARGE_SLIDER_ROUND_FILL_ID), Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_LARGE_INDICATORS_SLIDER_ROUND_NOB_ID));
    slider1.setupHorizontalSlider(2, 22, 0, 0, 621);
    slider1.setValueRange(0, 100);
    slider1.setValue(0);

    buttonWithLabel1.setXY(749, 463);
    buttonWithLabel1.setBitmaps(Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonWithLabel1.setLabelText(TypedText(T_SINGLEUSEID4));
    buttonWithLabel1.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabel1.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(217, 22, 22));
    buttonWithLabel1.setAction(buttonCallback);

    button1.setXY(772, 329);
    button1.setBitmaps(Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));

    flexButton1.setBoxWithBorderPosition(0, 0, 87, 50);
    flexButton1.setBorderSize(5);
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(0, 102, 153), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 51, 102), touchgfx::Color::getColorFrom24BitRGB(51, 102, 153));
    flexButton1.setText(TypedText(T_SINGLEUSEID5));
    flexButton1.setTextPosition(0, 12, 87, 50);
    flexButton1.setTextColors(touchgfx::Color::getColorFrom24BitRGB(10, 10, 10), touchgfx::Color::getColorFrom24BitRGB(10, 10, 10));
    flexButton1.setPosition(402, 435, 87, 50);
    flexButton1.setAction(flexButtonCallback);

    numpad1.setXY(479, 71);

    box1_5_2.setPosition(308, 212, 135, 160);
    box1_5_2.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 255, 255));

    add(scalableImage1);
    add(box1);
    add(box1_2);
    add(box1_1);
    add(box1_3);
    add(box1_4);
    add(box1_5);
    add(box1_5_1);
    add(slider1);
    add(buttonWithLabel1);
    add(button1);
    add(flexButton1);
    add(numpad1);
    add(box1_5_2);
}

void Screen1ViewBase::setupScreen()
{
    numpad1.initialize();
}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel1)
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Screen2
        //Go to Screen2 with screen transition towards East
        application().gotoScreen2ScreenSlideTransitionEast();
    }
    else if (&src == &button1)
    {

    }
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
    {
        //Interaction2
        //When flexButton1 clicked call virtual function
        //Call triggerNumpad
        triggerNumpad();
    }
}
